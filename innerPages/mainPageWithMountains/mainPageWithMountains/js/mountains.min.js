import*as THREE from"https://threejs.org/build/three.module.js";import{OrbitControls}from"https://threejs.org/examples/jsm/controls/OrbitControls.js";import{ImprovedNoise}from"https://threejs.org/examples/jsm/math/ImprovedNoise.js";const perlin=new ImprovedNoise;let backColor=16744379,scene=new THREE.Scene;scene.fog=new THREE.Fog(backColor,2,260);let camera=new THREE.PerspectiveCamera(60,innerWidth/innerHeight,.1,1e3);camera.position.set(0,1,60);let renderer=new THREE.WebGLRenderer({antialias:!0});renderer.setSize(innerWidth,innerHeight),document.body.appendChild(renderer.domElement);let controls=new OrbitControls(camera,renderer.domElement);controls.target.set(0,.5,0),controls.update();let light=new THREE.DirectionalLight(13384081,.4);light.position.set(0,30,-200),scene.add(light,new THREE.AmbientLight(13384081,.4));let globalCounter=1,chunks=[];createChunk(0,127),createChunk(-225,8323199);let clock=new THREE.Clock,scrollPos=0;window.addEventListener("scroll",()=>scrollPos=window.scrollY),renderer.setAnimationLoop(e=>{let t=.01*scrollPos;so.scale.x=1+7e-4*scrollPos,so.scale.y=1+7e-4*scrollPos,globalUniforms.time.value=clock.getElapsedTime(),chunks.forEach(e=>{if(e.position.z=t,e.userData.totalTime=t,e.position.z>225){let t=e.userData.totalTime%225;e.position.z=-225+t,updateChunk(e)}}),renderer.setClearColor(backColor),renderer.render(scene,camera)});let bg=new THREE.SphereGeometry(400,64,32),bm=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,onBeforeCompile:e=>{e.fragmentShader=e.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n        vec2 uv = vUv;\n        vec3 c1 = vec3(1., 0.5, 0.5);\n        vec3 c2 = vec3(0, 0, 0.5);\n        float f = smoothstep(0.5, 0.575, uv.y);\n        vec3 col = mix(c1, c2, f);\n      vec4 diffuseColor = vec4( col, opacity );")}});bm.defines={USE_UV:""};let bo=new THREE.Mesh(bg,bm);function createChunk(e){let t=new THREE.Group,o=new THREE.PlaneGeometry(50,225,50,125);o.rotateX(.5*-Math.PI);let n=new THREE.MeshStandardMaterial({color:1815,wireframe:!1,roughness:.6,metalness:.5,onBeforeCompile:e=>{e.fragmentShader=e.fragmentShader.replace("#include <fog_fragment>","\n          // http://madebyevan.com/shaders/grid/\n          vec2 coord = vUv * vec2(50., 125.);\n          vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) / 1.5;\n          float line = min(grid.x, grid.y);\n          line = min(line, 1.0);\n          vec3 col = mix(vec3(0.5, 1, 1), gl_FragColor.rgb, line);\n          gl_FragColor = vec4( col, opacity);\n        ")}});n.defines={USE_UV:""};let r=new THREE.Mesh(o,n);t.add(r);let s=(new THREE.InstancedBufferGeometry).copy(new THREE.SphereGeometry(.05,8,6));s.instanceCount=1/0,s.setAttribute("instPos",new THREE.InstancedBufferAttribute(o.attributes.position.array,3));let i=new THREE.MeshBasicMaterial({color:9827058,onBeforeCompile:e=>{e.vertexShader=`\n        attribute vec3 instPos;\n        ${e.vertexShader}\n      `.replace("#include <begin_vertex>","#include <begin_vertex>\n          transformed += instPos;\n        ")}}),a=new THREE.Mesh(s,i);a.frustumCulled=!1,t.add(a),t.position.z=e,t.userData={totalTime:0},updateChunk(t),chunks.push(t),scene.add(t)}scene.add(bo);let globalUniforms={time:{value:0}},sg=new THREE.CircleGeometry(20,64),sm=new THREE.MeshBasicMaterial({color:16772863,fog:!1,transparent:!0,onBeforeCompile:e=>{e.uniforms.time=globalUniforms.time,e.fragmentShader=("\n      uniform float time;\n      "+e.fragmentShader).replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n        vec2 uv = vUv - 0.5;\n        float f = smoothstep(0.5, 0.475, length(uv));\n        \n        // stripes\n        vec2 sUv = uv;\n        sUv.y *= 100.;\n        float sf = (sin(sUv.y - (time * 2.)) * 0.5 + 0.5);\n        float wave = (uv.y + 0.5) * 2.;\n        float e = length(fwidth(sUv));\n        sf = 1. - smoothstep(wave - e, wave, sf);\n        //\n        vec3 col = mix(diffuse * vec3(1, 0.75, 0.875), diffuse, clamp(vUv.y, 0., 1.));\n        vec4 diffuseColor = vec4( col, pow(f, 3.) * sf );\n      ")}});sm.defines={USE_UV:""},sm.extensions={derivatives:!0};let so=new THREE.Mesh(sg,sm);function updateChunk(e){let t=e.children[0].geometry,o=t.attributes.position,n=t.attributes.uv,r=new THREE.Vector2,s=new THREE.Vector2(10,25);for(let e=0;e<o.count;e++){r.fromBufferAttribute(n,e);let t=smoothstep(.01,.125,Math.abs(r.x-.5));r.multiply(s),r.y+=s.y*globalCounter;let i=.5*perlin.noise(r.x,r.y,1)+.5;o.setY(e,35*Math.pow(i,6)*t)}t.computeVertexNormals(),o.needsUpdate=!0,e.children[1].geometry.attributes.instPos.needsUpdate=!0,globalCounter++}function smoothstep(e,t,o){var n=Math.max(0,Math.min(1,(o-e)/(t-e)));return n*n*(3-2*n)}function onWindowResize(){camera.aspect=innerWidth/innerHeight,camera.updateProjectionMatrix(),renderer.setSize(innerWidth,innerHeight)}so.position.copy(camera.position).setY(10).z-=400,scene.add(so),window.addEventListener("resize",()=>onWindowResize());const q=document.querySelector(".wrapper");window.addEventListener("mouseeover",()=>{console.log("asd")});